// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Membership {
  SILVER
  GOLD
  DIAMOND
  PLATINUM
}

enum ActivityStatus {
  NOT_STARTED
  IN_PROGRESS
  DONE
}

model User {
  id            Int         @id @default(autoincrement())
  name          String
  email         String      @unique
  password      String
  passwordPlain String?
  membership    Membership
  startDate     DateTime
  endDate       DateTime
  phone         String?
  imageUrl      String?
  businessName  String?
  companyAddress String?
  annualRevenue Int?
  employeeCount Int?
  manufacturing Boolean?
  businessChallenges String[] @default([])
  status        String      @default("CREATED")
  lastLogin     DateTime?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model LearningModule {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  file        Bytes
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Tutorial {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  youtubeUrl  String
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ChecklistItem {
  id        Int            @id @default(autoincrement())
  user      User           @relation(fields: [userId], references: [id])
  userId    Int
  level     Int
  activity  String
  deadline  DateTime
  status    ActivityStatus @default(NOT_STARTED)
  remarks   String         @default("nil")
  updatedBy String?
  updatedAt DateTime?
}
